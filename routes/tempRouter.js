const express = require('express');
const { Pool } = require('pg');
const router = express.Router();
//Pool will be passed in through server.js when this file is invoked

//module.exports = function(pool){

router.post('/', (req, res) => {
//Saves a new events instance:
  //New id automatically generated by SQL(no JS required)
  //Owner id must be passed through from cookies
  //Start date, end date, submission deadline, and details all passed through from form submission\
//Return events.id from SQL query for redirection
//Redirection to /:event_events.id
});

router.get('/:event_id', (req, res) => {
  //Get all available days in order to POST timeslots to them
  const queryParams = [req.params.event_id];
  const queryString = `
  SELECT available_days.*
  FROM available_days
  JOIN events ON event_id = events.id
  SELECT events.id = $1
  `
  return pool.query(queryString, queryParams)
    .then(days => {
      return res.send(days.rows);
    })
});

router.post('/:event_id', (req, res) => {
  //Save new timeslots for event to database
  //an array (called available_days) of objects will be POSTed
    //each object will contain an available.day, start_time, and end_time
    //the form that POSTS will be formatted to create this array
  available_days.forEach((day) => {
    const queryParams = [req.params.day.event_id, req.body.day.day req.body.day.start_time, req.body.day.end_time ];
    const queryString = `
    INSERT INTO timeslots (event_id, available_day_id, start_time, end_time)
    VALUES ($1, $2, $3, $4)
    RETURNING $1
    `
    pool.query(queryString, queryParams);
  })
  res.redirect('/:event_id/share');
})

//This will display the URL that leads to the voting page and
//contain buttons that redirect to PUT versions of the /:event_id POST methods
router.get('/:event_id/share', (req, res) => {
  const templateVars = {
    event_id: req.params.event_id
  }
  res.render('share', templateVars);
})

//example url: /localhost:xxxx/vote/:event_id

router.get('/vote/:event_id', (req, res) => {
  const queryParams = [req.params.event_id];
  const queryString = `
  SELECT timeslots.*
  FROM timeslots
  WHERE event_id = $1
  `
  return pool.query(queryString, queryParams)
    .then(timeslots => {
      return res.send(timeslots.rows)
    })
})

router.post('/vote/:event_id', (req, res) => {
  const queryString = `
  `
  //This one is tricky I'll get back to it
})

router.get('/results/:event_id', (req, res) => {
  //Rename user_votes table to just votes
  const queryParams = [req.params.event_id];
  const queryString = `
  SELECT count(votes.*)
  FROM votes
  WHERE event_id = $1
  GROUP BY available_day_id
  `
  return pool.query(queryString, queryParams)
    .then (votes => {
      return res.send(votes.rows)
    })
})

//}
